-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.

--ROLLBACK;

--DROP TABLE IF EXISTS public.area CASCADE;

-- CREATE OR REPLACE FUCNTION criar_entidades()
-- RETURNS VOID AS
-- $$
-- BEGIN
DROP TABLE IF EXISTS GERACAO_ENERGIA;

CREATE TABLE geracao_energia
(
	id_energia integer NOT NULL,
	sigla_area varchar(3) NOT NULL,
	quantidade double precision,
	unidade varchar(10) NOT NULL,
	ano integer
);

DROP TABLE IF EXISTS AREA;

CREATE TABLE AREA
(
	--id integer NOT NULL,
	sigla varchar(5),
	nome varchar(50) NOT NULL,
	tipo varchar(12),
	continente varchar(20),
	PRIMARY KEY (sigla)
);

DROP TABLE IF EXISTS ENERGIA;

CREATE TABLE energia
(
	id integer GENERATED BY DEFAULT AS IDENTITY,
	categoria character varying(50),
	subcategoria character varying(50),
	variavel character varying(50),
	PRIMARY KEY (id)
);

-- Tabela de atribuição de códigos às áreas sem cód
DROP TABLE IF EXISTS SIGLA_ARTIFICIAL;

CREATE TABLE SIGLA_ARTIFICIAL (
	NOME varchar(50),
	SIGLA varchar(3)
);

INSERT INTO SIGLA_ARTIFICIAL VALUES 
('Africa', 'AFR'),
('ASEAN', 'ASE'),
('Asia', 'ASI'),
('EU', 'EU'),
('Europe', 'EUR'),
('G20', 'G20'),
('G7', 'G7'),
('Latin America and Caribbean', 'LAC'),
('Middle East', 'ME'),
('North America', 'NA'),
('Oceania', 'OCE'),
('OECD', 'OEC'),
('World', 'WRL');

ALTER TABLE IF EXISTS geracao_energia
	ADD FOREIGN KEY (id_energia)
	REFERENCES energia (id) MATCH SIMPLE
	ON UPDATE NO ACTION
	ON DELETE NO ACTION
	NOT VALID;

ALTER TABLE IF EXISTS geracao_energia
	ADD FOREIGN KEY (sigla_area)
	REFERENCES area (sigla) MATCH SIMPLE
	ON UPDATE NO ACTION
	ON DELETE NO ACTION
	NOT VALID;
-- END;
-- $$ LANGUAGE plpgsql;

/*
INSERÇÃO DO CSV
*/
CREATE TEMP TABLE T
(
    area VARCHAR(100),
    country_code VARCHAR(3),
    year INTEGER,
    area_type VARCHAR(20),
    continent VARCHAR(20),
    ember_region VARCHAR(50),
    eu NUMERIC(3,1),
    oecd NUMERIC(3,1),
    g20 NUMERIC(3,1),
    g7 NUMERIC(3,1),
    asean NUMERIC(3,1),
    category VARCHAR(50),
    subcategory VARCHAR(50),
    variable VARCHAR(50),
    unit VARCHAR(10),
    value DOUBLE PRECISION,
    yoy_absolute_change DOUBLE PRECISION,
    yoy_percent_change DOUBLE PRECISION
);

COPY T
FROM '/tmp/energia.csv'
WITH (format csv, HEADER true);

SELECT * FROM T;

/*
POPULAÇÃO DA ENTIDADE AREA
*/
-- Inserção de áreas com código
INSERT INTO AREA
SELECT DISTINCT	COUNTRY_CODE,
		AREA,
		AREA_TYPE,
		CONTINENT
FROM T
WHERE COUNTRY_CODE IS NOT NULL;

-- Inserção de áreas sem código
INSERT INTO AREA
SELECT DISTINCT SA.SIGLA,
		T.AREA,
		T.AREA_TYPE,
		T.CONTINENT
FROM T INNER JOIN SIGLA_ARTIFICIAL AS SA
ON T.AREA = SA.NOME;

/*
POPULAÇÃO DA ENTIDADE ENERGIA
*/
INSERT INTO ENERGIA (CATEGORIA, SUBCATEGORIA, VARIAVEL)
SELECT DISTINCT CATEGORY,
		SUBCATEGORY,
		VARIABLE
FROM T;

-- Verificar diferentes unidades
SELECT DISTINCT UNIT FROM T
ORDER BY UNIT;

-- Verificar aplicações de cada unidade
SELECT DISTINCT CATEGORY,
		SUBCATEGORY,
		VARIABLE,
		UNIT
FROM T
ORDER BY CATEGORY, UNIT, SUBCATEGORY;

/*
POPULAÇÃO DA ENTIDADE GERACAO_ENERGIA
*/
INSERT INTO GERACAO_ENERGIA
SELECT	E.ID,
		CASE
			WHEN COUNTRY_CODE IS NOT NULL THEN COUNTRY_CODE
			ELSE SA.SIGLA
		END AS SIGLA_AREA,
		COALESCE(VALUE, 0) AS VALUE,
		UNIT,
		YEAR
FROM T
	LEFT JOIN SIGLA_ARTIFICIAL AS SA
		ON T.AREA = SA.NOME
	LEFT JOIN ENERGIA AS E
		ON T.CATEGORY = E.CATEGORIA
		AND T.SUBCATEGORY = E.SUBCATEGORIA
		AND T.VARIABLE = E.VARIAVEL
ORDER BY SIGLA_AREA, YEAR;

SELECT * FROM SIGLA_ARTIFICIAL;

SELECT *
FROM GERACAO_ENERGIA GE
JOIN AREA A
ON GE.SIGLA_AREA = A.SIGLA
JOIN ENERGIA E
ON GE.ID_ENERGIA = E.ID
WHERE TIPO != 'Country';

DROP TABLE T;